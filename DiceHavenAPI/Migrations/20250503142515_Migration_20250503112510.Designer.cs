// <auto-generated />
using System;
using DiceHavenAPI.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiceHaven_API.Migrations
{
    [DbContext(typeof(DiceHavenBDContext))]
    [Migration("20250503142515_Migration_20250503112510")]
    partial class Migration_20250503112510
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("DiceHavenAPI.Models.tb_campanha", b =>
                {
                    b.Property<int>("ID_CAMPANHA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DS_FOTO")
                        .HasColumnType("text");

                    b.Property<string>("DS_LORE")
                        .HasColumnType("text");

                    b.Property<string>("DS_NOME_CAMPANHA")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DT_CRIACAO")
                        .HasColumnType("datetime");

                    b.Property<bool>("FL_ATIVO")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FL_PUBLICA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_MESTRE_CAMPANHA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_USUARIO_CRIADOR")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_CAMPANHA")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ID_MESTRE_CAMPANHA" }, "ID_MESTRE_CAMPANHA");

                    b.HasIndex(new[] { "ID_USUARIO_CRIADOR" }, "ID_USUARIO_CRIADOR");

                    b.ToTable("tb_campanha", (string)null);
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_campo_ficha", b =>
                {
                    b.Property<int>("ID_CAMPO_FICHA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DS_DESCRICAO")
                        .HasColumnType("text");

                    b.Property<string>("DS_FORMULA_MODIFICADOR")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("DS_NOME_CAMPO")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("DS_REFERENCIA")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("DS_VALOR_PADRAO")
                        .HasColumnType("text");

                    b.Property<bool>("FL_ATIVO")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("FL_BLOQUEADO")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FL_TEM_MODIFICADOR")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("FL_VISIVEL")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_CAMPANHA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NR_ORDEM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NR_TIPO_CAMPO")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_CAMPO_FICHA")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ID_CAMPANHA" }, "ID_CAMPANHA");

                    b.ToTable("tb_campo_ficha", (string)null);
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_chat", b =>
                {
                    b.Property<int>("ID_CHAT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FL_ATIVO_USR_1")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FL_ATIVO_USR_2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_USUARIO_1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_USUARIO_2")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_CHAT")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ID_USUARIO_1" }, "ID_USUARIO_1");

                    b.HasIndex(new[] { "ID_USUARIO_2" }, "ID_USUARIO_2");

                    b.ToTable("tb_chat", (string)null);
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_chat_mensagem", b =>
                {
                    b.Property<int>("ID_CHAT_MENSAGEM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DS_LINK_IMAGEM")
                        .HasColumnType("text");

                    b.Property<string>("DS_MENSAGEM")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DT_DATA_ENVIO")
                        .HasColumnType("datetime");

                    b.Property<bool>("FL_ATIVA")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FL_EDITADA")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FL_VISUALIZADA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_CHAT")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_USUARIO")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_CHAT_MENSAGEM")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ID_CHAT" }, "ID_CHAT");

                    b.HasIndex(new[] { "ID_USUARIO" }, "ID_USUARIO");

                    b.ToTable("tb_chat_mensagem", (string)null);
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_config_usuario", b =>
                {
                    b.Property<int>("ID_CONFIG_USUARIO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FL_DARK_MODE")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_CONFIG_USUARIO")
                        .HasName("PRIMARY");

                    b.ToTable("tb_config_usuario", (string)null);
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_dados_ficha", b =>
                {
                    b.Property<int>("ID_DADO_FICHA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DS_VALOR")
                        .HasColumnType("text");

                    b.Property<int>("ID_CAMPO_FICHA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_PERSONAGEM")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_DADO_FICHA")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ID_CAMPO_FICHA" }, "ID_CAMPO_FICHA");

                    b.HasIndex(new[] { "ID_PERSONAGEM" }, "ID_PERSONAGEM");

                    b.ToTable("tb_dados_ficha", (string)null);
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_personagem", b =>
                {
                    b.Property<int>("ID_PERSONAGEM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DS_BACKSTORY")
                        .HasColumnType("text");

                    b.Property<string>("DS_CAMPO_LIVRE")
                        .HasColumnType("text");

                    b.Property<string>("DS_FOTO")
                        .HasColumnType("text");

                    b.Property<string>("DS_GENERO")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("DS_NOME")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("TEXT");

                    b.Property<int>("ID_USUARIO")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NR_IDADE")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_PERSONAGEM")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ID_USUARIO" }, "ID_USUARIO")
                        .HasDatabaseName("ID_USUARIO1");

                    b.ToTable("tb_personagem", (string)null);
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_usuario", b =>
                {
                    b.Property<int>("ID_USUARIO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DS_EMAIL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DS_FOTO")
                        .HasColumnType("text");

                    b.Property<string>("DS_LOGIN")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("DS_NOME")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DS_SENHA")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DT_NASCIMENTO")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DT_ULTIMO_ACESSO")
                        .HasColumnType("datetime");

                    b.Property<bool>("FL_ATIVO")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_USUARIO")
                        .HasName("PRIMARY");

                    b.ToTable("tb_usuario", (string)null);
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_usuario_campanha", b =>
                {
                    b.Property<int>("ID_USUARIO_CAMPANHA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DT_ENTRADA")
                        .HasColumnType("datetime");

                    b.Property<bool>("FL_ADMIN")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FL_MUTADO")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_CAMPANHA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_USUARIO")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_USUARIO_CAMPANHA")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ID_CAMPANHA" }, "ID_CAMPANHA")
                        .HasDatabaseName("ID_CAMPANHA1");

                    b.HasIndex(new[] { "ID_USUARIO" }, "ID_USUARIO")
                        .HasDatabaseName("ID_USUARIO2");

                    b.ToTable("tb_usuario_campanha", (string)null);
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_usuario_contato", b =>
                {
                    b.Property<int>("ID_USUARIO_CONTATO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FL_MUTADO")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_CONTATO")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_USUARIO")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_USUARIO_CONTATO")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ID_CONTATO" }, "ID_CONTATO");

                    b.HasIndex(new[] { "ID_USUARIO" }, "ID_USUARIO")
                        .HasDatabaseName("ID_USUARIO3");

                    b.ToTable("tb_usuario_contato", (string)null);
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_campanha", b =>
                {
                    b.HasOne("DiceHavenAPI.Models.tb_usuario", "ID_MESTRE_CAMPANHANavigation")
                        .WithMany("tb_campanhaID_MESTRE_CAMPANHANavigations")
                        .HasForeignKey("ID_MESTRE_CAMPANHA")
                        .IsRequired()
                        .HasConstraintName("tb_campanha_ibfk_2");

                    b.HasOne("DiceHavenAPI.Models.tb_usuario", "ID_USUARIO_CRIADORNavigation")
                        .WithMany("tb_campanhaID_USUARIO_CRIADORNavigations")
                        .HasForeignKey("ID_USUARIO_CRIADOR")
                        .IsRequired()
                        .HasConstraintName("tb_campanha_ibfk_1");

                    b.Navigation("ID_MESTRE_CAMPANHANavigation");

                    b.Navigation("ID_USUARIO_CRIADORNavigation");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_campo_ficha", b =>
                {
                    b.HasOne("DiceHavenAPI.Models.tb_campanha", "ID_CAMPANHANavigation")
                        .WithMany("tb_campo_fichas")
                        .HasForeignKey("ID_CAMPANHA")
                        .IsRequired()
                        .HasConstraintName("tb_campo_ficha_ibfk_1");

                    b.Navigation("ID_CAMPANHANavigation");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_chat", b =>
                {
                    b.HasOne("DiceHavenAPI.Models.tb_usuario", "ID_USUARIO_1Navigation")
                        .WithMany("tb_chatID_USUARIO_1Navigations")
                        .HasForeignKey("ID_USUARIO_1")
                        .IsRequired()
                        .HasConstraintName("tb_chat_ibfk_1");

                    b.HasOne("DiceHavenAPI.Models.tb_usuario", "ID_USUARIO_2Navigation")
                        .WithMany("tb_chatID_USUARIO_2Navigations")
                        .HasForeignKey("ID_USUARIO_2")
                        .IsRequired()
                        .HasConstraintName("tb_chat_ibfk_2");

                    b.Navigation("ID_USUARIO_1Navigation");

                    b.Navigation("ID_USUARIO_2Navigation");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_chat_mensagem", b =>
                {
                    b.HasOne("DiceHavenAPI.Models.tb_chat", "ID_CHATNavigation")
                        .WithMany("tb_chat_mensagems")
                        .HasForeignKey("ID_CHAT")
                        .IsRequired()
                        .HasConstraintName("tb_chat_mensagem_ibfk_2");

                    b.HasOne("DiceHavenAPI.Models.tb_usuario", "ID_USUARIONavigation")
                        .WithMany("tb_chat_mensagems")
                        .HasForeignKey("ID_USUARIO")
                        .IsRequired()
                        .HasConstraintName("tb_chat_mensagem_ibfk_1");

                    b.Navigation("ID_CHATNavigation");

                    b.Navigation("ID_USUARIONavigation");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_config_usuario", b =>
                {
                    b.HasOne("DiceHavenAPI.Models.tb_usuario", "ID_CONFIG_USUARIONavigation")
                        .WithOne("tb_config_usuario")
                        .HasForeignKey("DiceHavenAPI.Models.tb_config_usuario", "ID_CONFIG_USUARIO")
                        .IsRequired()
                        .HasConstraintName("tb_config_usuario_ibfk_1");

                    b.Navigation("ID_CONFIG_USUARIONavigation");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_dados_ficha", b =>
                {
                    b.HasOne("DiceHavenAPI.Models.tb_campo_ficha", "ID_CAMPO_FICHANavigation")
                        .WithMany("tb_dados_fichas")
                        .HasForeignKey("ID_CAMPO_FICHA")
                        .IsRequired()
                        .HasConstraintName("tb_dados_ficha_ibfk_1");

                    b.HasOne("DiceHavenAPI.Models.tb_personagem", "ID_PERSONAGEMNavigation")
                        .WithMany("tb_dados_fichas")
                        .HasForeignKey("ID_PERSONAGEM")
                        .IsRequired()
                        .HasConstraintName("tb_dados_ficha_ibfk_2");

                    b.Navigation("ID_CAMPO_FICHANavigation");

                    b.Navigation("ID_PERSONAGEMNavigation");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_personagem", b =>
                {
                    b.HasOne("DiceHavenAPI.Models.tb_usuario", "ID_USUARIONavigation")
                        .WithMany("tb_personagems")
                        .HasForeignKey("ID_USUARIO")
                        .IsRequired()
                        .HasConstraintName("tb_personagem_ibfk_1");

                    b.Navigation("ID_USUARIONavigation");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_usuario_campanha", b =>
                {
                    b.HasOne("DiceHavenAPI.Models.tb_campanha", "ID_CAMPANHANavigation")
                        .WithMany("tb_usuario_campanhas")
                        .HasForeignKey("ID_CAMPANHA")
                        .IsRequired()
                        .HasConstraintName("tb_usuario_campanha_ibfk_1");

                    b.HasOne("DiceHavenAPI.Models.tb_usuario", "ID_USUARIONavigation")
                        .WithMany("tb_usuario_campanhas")
                        .HasForeignKey("ID_USUARIO")
                        .IsRequired()
                        .HasConstraintName("tb_usuario_campanha_ibfk_2");

                    b.Navigation("ID_CAMPANHANavigation");

                    b.Navigation("ID_USUARIONavigation");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_usuario_contato", b =>
                {
                    b.HasOne("DiceHavenAPI.Models.tb_usuario", "ID_CONTATONavigation")
                        .WithMany("tb_usuario_contatoID_CONTATONavigations")
                        .HasForeignKey("ID_CONTATO")
                        .IsRequired()
                        .HasConstraintName("tb_usuario_contato_ibfk_2");

                    b.HasOne("DiceHavenAPI.Models.tb_usuario", "ID_USUARIONavigation")
                        .WithMany("tb_usuario_contatoID_USUARIONavigations")
                        .HasForeignKey("ID_USUARIO")
                        .IsRequired()
                        .HasConstraintName("tb_usuario_contato_ibfk_1");

                    b.Navigation("ID_CONTATONavigation");

                    b.Navigation("ID_USUARIONavigation");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_campanha", b =>
                {
                    b.Navigation("tb_campo_fichas");

                    b.Navigation("tb_usuario_campanhas");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_campo_ficha", b =>
                {
                    b.Navigation("tb_dados_fichas");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_chat", b =>
                {
                    b.Navigation("tb_chat_mensagems");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_personagem", b =>
                {
                    b.Navigation("tb_dados_fichas");
                });

            modelBuilder.Entity("DiceHavenAPI.Models.tb_usuario", b =>
                {
                    b.Navigation("tb_campanhaID_MESTRE_CAMPANHANavigations");

                    b.Navigation("tb_campanhaID_USUARIO_CRIADORNavigations");

                    b.Navigation("tb_chatID_USUARIO_1Navigations");

                    b.Navigation("tb_chatID_USUARIO_2Navigations");

                    b.Navigation("tb_chat_mensagems");

                    b.Navigation("tb_config_usuario");

                    b.Navigation("tb_personagems");

                    b.Navigation("tb_usuario_campanhas");

                    b.Navigation("tb_usuario_contatoID_CONTATONavigations");

                    b.Navigation("tb_usuario_contatoID_USUARIONavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
